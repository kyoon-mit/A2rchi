services:
  cleo-dev:
    image: cleo-dev:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-cleo
      args:
        TAG: ${TAG}
    depends_on:
      chromadb-dev:
        condition: service_healthy
    environment:
      RUNTIME_ENV: dev
      CLEO_URL_FILE: /run/secrets/cleo_url
      CLEO_USER_FILE: /run/secrets/cleo_user
      CLEO_PW_FILE: /run/secrets/cleo_pw
      CLEO_PROJECT_FILE: /run/secrets/cleo_project
      SENDER_SERVER_FILE: /run/secrets/sender_server
      SENDER_PORT_FILE: /run/secrets/sender_port
      SENDER_REPLYTO_FILE: /run/secrets/sender_replyto
      SENDER_USER_FILE: /run/secrets/sender_user
      SENDER_PW_FILE: /run/secrets/sender_pw
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
    secrets:
      - cleo_url
      - cleo_user
      - cleo_pw
      - cleo_project
      - sender_server
      - sender_port
      - sender_replyto
      - sender_user
      - sender_pw
      - openai_api_key
      - hf_token
    volumes:
      - a2rchi-dev-data:/root/data/
    logging:
      options:
        max-size: 10m
    restart: always

  chat-dev:
    image: chat-dev:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-chat
      args:
        TAG: ${TAG}
    depends_on:
      chromadb-dev:
        condition: service_healthy
    environment:
      RUNTIME_ENV: dev
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
      A2RCHI_SSL_CERTIFICATE_FILE: /run/secrets/a2rchi_ssl_certicate
      A2RCHI_SSL_CERTIFICATE_KEY_FILE: /run/secrets/a2rchi_ssl_certicate_key
    secrets:
      - openai_api_key
      - hf_token
    volumes:
      - a2rchi-dev-data:/root/data/
    logging:
      options:
        max-size: 10m
    ports:
      - 7682:7861  # host:container
    restart: always

  mailbox-dev:
    image: mailbox-dev:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-mailbox
      args:
        TAG: ${TAG}
    depends_on:
      chromadb-dev:
        condition: service_healthy
    environment:
      RUNTIME_ENV: dev
      IMAP_USER_FILE: /run/secrets/imap_user
      IMAP_PW_FILE: /run/secrets/imap_pw
      CLEO_URL_FILE: /run/secrets/cleo_url
      CLEO_USER_FILE: /run/secrets/cleo_user
      CLEO_PW_FILE: /run/secrets/cleo_pw
      CLEO_PROJECT_FILE: /run/secrets/cleo_project
      SENDER_SERVER_FILE: /run/secrets/sender_server
      SENDER_PORT_FILE: /run/secrets/sender_port
      SENDER_REPLYTO_FILE: /run/secrets/sender_replyto
      SENDER_USER_FILE: /run/secrets/sender_user
      SENDER_PW_FILE: /run/secrets/sender_pw
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
    secrets:
      - imap_user
      - imap_pw
      - cleo_url
      - cleo_user
      - cleo_pw
      - cleo_project
      - sender_server
      - sender_port
      - sender_replyto
      - sender_user
      - sender_pw
      - openai_api_key
      - hf_token
    logging:
      options:
        max-size: 10m
    restart: always

  uploader-dev:
    image: uploader-dev:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-uploader
      args:
        TAG: ${TAG}
    depends_on:
      chromadb-dev:
        condition: service_healthy
    environment:
      RUNTIME_ENV: dev
      FLASK_UPLOADER_APP_SECRET_KEY_FILE: /run/secrets/flask_uploader_app_secret_key
      UPLOADER_SALT_FILE: /run/secrets/uploader_salt
      OPENAI_API_KEY_FILE: /run/secrets/openai_api_key
      HUGGING_FACE_HUB_TOKEN_FILE: /run/secrets/hf_token
    secrets:
      - flask_uploader_app_secret_key
      - uploader_salt
      - openai_api_key
      - hf_token
    ports:
      - 5003:5001  # host:container
    volumes:
      - a2rchi-dev-data:/root/data/
    logging:
      options:
        max-size: 10m
    restart: always

  chromadb-dev:
    image: chromadb-dev:${TAG}
    build:
      context: ../..
      dockerfile: deploy/dockerfiles/Dockerfile-chroma
    environment:
      RUNTIME_ENV: dev
    ports:
      - 8002:8000  # host:container
    volumes:
      - a2rchi-dev-data:/chroma/chroma/
    logging:
      options:
        max-size: 10m
    restart: always
    # healthcheck originates from inside container; so use container port
    healthcheck:
      test: ["CMD", "curl", "-f", "http://0.0.0.0:8000/api/v1/heartbeat"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
      start_interval: 5s

volumes:
  a2rchi-dev-data:
    external: true

secrets:
  imap_user:
    file: secrets/imap_user.txt
  imap_pw:
    file: secrets/imap_pw.txt
  cleo_url:
    file: secrets/cleo_url.txt
  cleo_user:
    file: secrets/cleo_user.txt
  cleo_pw:
    file: secrets/cleo_pw.txt
  cleo_project:
    file: secrets/cleo_project.txt
  sender_server:
    file: secrets/sender_server.txt
  sender_port:
    file: secrets/sender_port.txt
  sender_replyto:
    file: secrets/sender_replyto.txt
  sender_user:
    file: secrets/sender_user.txt
  sender_pw:
    file: secrets/sender_pw.txt
  flask_uploader_app_secret_key:
    file: secrets/flask_uploader_app_secret_key.txt
  uploader_salt:
    file: secrets/uploader_salt.txt
  openai_api_key:
    file: secrets/openai_api_key.txt
  hf_token:
    file: secrets/hf_token.txt
  a2rchi_ssl_certicate:
    file: secrets/a2rchi_ssl_certicate.txt
  a2rchi_ssl_certicate_key:
    file: secrets/a2rchi_ssl_certicate_key.txt
